{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://github.com/iztiar/iztiar-core/schemas/imqtt-client.schema.json",
    "title": "IMqttClient",
    "description": "the configuration of the IMqttClient interface",
    "type": "object",
    "properties" : {
        "IMqttClient": {
            "type": "object",
            "description": "the configuration group, required to be present to try to connect as IMqttClient to a broker",
            "properties": {
                "feature": {
                    "type": "string",
                    "description": "the name of the messaging feature to which the feature may connect (the preferred configuration)"
                },
                "uri": {
                    "type": "string",
                    "description": "the URI to use to connect to (replace proto, host and port)"
                },
                "proto": {
                    "type": "string",
                    "description": "the protocol to be used",
                    "default": "mqtt"
                },
                "host": {
                    "type": "string",
                    "description": "the hostname to use to connect to the message bus, must match the common name of the server certificate"
                },
                "port": {
                    "type": "integer",
                    "description": "the port number to use to connect to the message bus",
                    "default": 24003
                },
                "cert": {
                    "type": "string",
                    "description": "path (relative to storageDir) to this client certificate in PEM format"
                },
                "key": {
                    "type": "string",
                    "description": "path (relative to storageDir) to this client private key in PEM format"
                },
                "options": {
                    "type": "object",
                    "description": "any client connection option that the official MQTT.js library accepts",
                    "properties": {
                        "reconnectPeriod": {
                            "type": "integer",
                            "description": "interval between two reconnections (MQTT.js default=1000)",
                            "default": 5000
                        }
                    }
                },
                "alive": {
                    "type": "object",
                    "description": "publication of an alive message on this connection",
                    "properties": {
                        "publish": {
                            "type": "boolean",
                            "description": "whether to publish an alive message on this connection",
                            "default": "false"
                        },
                        "period": {
                            "type": "integer",
                            "description": "interval (ms) between two alive publications, defaulting to 1mn",
                            "default": 60000
                        }
                    }
                }
            }
        },
        "patternProperties" : {
            "^IMqttClient\\.[a-zA-Z][a-zA-Z0-9-_]*$": {
                "type": "object",
                "description": "the configuration group to handle a particular connection"
            }
        }
    }
}
